package Junior_java_develop.TASK7.AnnotatedElement;

public class DifferentAnnotations {
    /*
    @Retention
    -Предназначена для применения только в качестве аннотации
     к другим аннотациям. Она определяет правило удержания,
     как пояснялось ранее в этой главе.

    @Documented
    -Служит маркерным интерфейсом, сообщающим инструментальному
    средству разработки, что аннотация должна быть документирована.
    Она предназначена для применения только в качестве аннотации
    к объявлению другой аннотации.

    @Target
    -Задает типы элементов, к которым можно применять аннотацию.
    Она предназначена для применения только в качестве
    аннотации к другим аннотациям. Аннотация @Target принимает
    один аргумент, который должен быть константой из перечисления
    ElernentType. Этот аргумент задает типы объявляемых элементов,
    к которым можно применять аннотацию.

    @Inherited
    -Это - анноютая-маркер, которую можно применять только в
    другом объявлении аннотации. Более того, она оказывает воздействие только
    на те аннотации, которые будут применяться в объявлениях классов.
    Аннотация @ Iпherited обусловливает наследование аннотации из
    суперкласса в подклассе. Так, если конкретная аннотация запрашивается в
    подассе, то в отсутствие этой аннотации в подклассе нроверяется ее
    присутствие в сунерклассе. Если занрашивае:v�ая ашюта11ия
    нрисугствуст в суперклассе и ашютирована как @ Inher i ted,
    то она бу11ет во:шращена по :J<tпpocy.

     */
}
